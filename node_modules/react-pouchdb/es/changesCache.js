import _Map from "@babel/runtime/core-js/map";
import stringify from 'json-stable-stringify';
import get from './getWithDefaultValue';
export var cache = new _Map();
var EVENT = 'change';
export default function changesCache(options, handleChange) {
  var _this = this;

  var dbCache = get.call(cache, this, function () {
    return new _Map();
  });
  var key = stringify(options);
  var listener = get.call(dbCache, key, function () {
    return {
      eventEmitter: _this.changes(options),
      count: 0
    };
  });
  var eventEmitter = listener.eventEmitter;
  listener.count = listener.count + 1;
  eventEmitter.on(EVENT, handleChange);
  return function cancel() {
    listener.count = listener.count - 1;

    if (listener.count) {
      eventEmitter.removeListener(EVENT, handleChange);
    } else {
      eventEmitter.cancel();
      dbCache.delete(key);
    }
  };
}
//# sourceMappingURL=changesCache.js.map