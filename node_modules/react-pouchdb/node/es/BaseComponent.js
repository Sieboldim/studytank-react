import _objectSpread from "@babel/runtime/helpers/objectSpread";
import _Object$getPrototypeOf from "@babel/runtime/core-js/object/get-prototype-of";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _inherits from "@babel/runtime/helpers/inherits";
import { Component } from 'react';
import shouldUpdate from './shouldUpdate';
import { omit, propTypes as renderPropTypes } from './renderProps';
import { propTypes as dbPropTypes } from './withDB';

var BaseComponent =
/*#__PURE__*/
function (_Component) {
  _inherits(BaseComponent, _Component);

  function BaseComponent() {
    _classCallCheck(this, BaseComponent);

    return _possibleConstructorReturn(this, (BaseComponent.__proto__ || _Object$getPrototypeOf(BaseComponent)).apply(this, arguments));
  }

  _createClass(BaseComponent, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this._isMounted = true;

      this._listen();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (shouldUpdate(prevProps, this.props)) {
        this.unlisten();

        this._listen();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this._isMounted = false;
      this.unlisten();
    }
  }, {
    key: "setStateIfMounted",
    value: function setStateIfMounted(state) {
      if (!this._isMounted) {
        return;
      }

      this.setState(state);
      return true;
    }
  }, {
    key: "_listen",
    value: function _listen() {
      this.listen(omit(this.props));
    }
  }, {
    key: "unlisten",
    value: function unlisten() {
      var cancel = this.cancel;

      if (cancel) {
        cancel();
      }
    }
  }]);

  return BaseComponent;
}(Component);

Object.defineProperty(BaseComponent, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: _objectSpread({}, renderPropTypes, dbPropTypes)
});
export { BaseComponent as default };
//# sourceMappingURL=BaseComponent.js.map